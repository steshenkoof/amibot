#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
"""
import asyncio
import requests
import subprocess
import sys
import time
import logging
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def kill_python_processes():
    """–ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python"""
    try:
        if sys.platform == "win32":
            # Windows
            result = subprocess.run(['taskkill', '/F', '/IM', 'python.exe'], 
                                  capture_output=True, text=True)
            if result.returncode == 0:
                logger.info("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã python.exe")
            
            result = subprocess.run(['taskkill', '/F', '/IM', 'python3.11.exe'], 
                                  capture_output=True, text=True)
            if result.returncode == 0:
                logger.info("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã python3.11.exe")
        else:
            # Linux/Mac
            subprocess.run(['pkill', '-f', 'python.*bot'], check=False)
            logger.info("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã python bot")
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã: {e}")

def clear_webhook():
    """–û—á–∏—Å—Ç–∏—Ç—å webhook"""
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/deleteWebhook"
        response = requests.post(url, timeout=10)
        result = response.json()
        
        if result.get('ok'):
            logger.info("‚úÖ Webhook –æ—á–∏—â–µ–Ω")
        else:
            logger.warning(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π webhook: {result}")
            
        # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç—É—Å
        info_url = f"https://api.telegram.org/bot{BOT_TOKEN}/getWebhookInfo"
        info_response = requests.get(info_url, timeout=10)
        info_result = info_response.json()
        
        if info_result.get('ok'):
            webhook_info = info_result.get('result', {})
            if not webhook_info.get('url'):
                logger.info("‚úÖ Webhook –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - –≥–æ—Ç–æ–≤ –∫ polling")
            else:
                logger.warning(f"‚ö†Ô∏è Webhook –≤—Å–µ –µ—â–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_info.get('url')}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ webhook: {e}")

def wait_for_telegram():
    """–ü–æ–¥–æ–∂–¥–∞—Ç—å, –ø–æ–∫–∞ Telegram –æ—Å–≤–æ–±–æ–¥–∏—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    logger.info("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π Telegram...")
    time.sleep(10)  # –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥
    logger.info("‚úÖ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

async def test_bot_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É"""
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/getMe"
        response = requests.get(url, timeout=10)
        result = response.json()
        
        if result.get('ok'):
            bot_info = result.get('result', {})
            logger.info(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info.get('username')}")
            return True
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É: {result}")
            return False
    except Exception as e:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–æ—Ç—É: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É –±–æ—Ç–∞...")
    
    # 1. –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python
    logger.info("1Ô∏è‚É£ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Python...")
    kill_python_processes()
    
    # 2. –û—á–∏—Å—Ç–∏—Ç—å webhook
    logger.info("2Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ webhook...")
    clear_webhook()
    
    # 3. –ü–æ–¥–æ–∂–¥–∞—Ç—å –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
    logger.info("3Ô∏è‚É£ –û–∂–∏–¥–∞–Ω–∏–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤...")
    wait_for_telegram()
    
    # 4. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    logger.info("4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
    if not await test_bot_connection():
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–æ—Ç—É!")
        return False
    
    # 5. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("5Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    try:
        from bot import main as bot_main
        await bot_main()
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        return False
    
    return True

if __name__ == "__main__":
    try:
        success = asyncio.run(main())
        if success:
            logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        else:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞!")
            sys.exit(1)
    except KeyboardInterrupt:
        logger.info("üëã –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 