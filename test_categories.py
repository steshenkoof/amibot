import asyncio
from database import db

async def test_categories():
    """Test category functions"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    
    try:
        # Initialize database
        await db.init_db()
        
        # Test getting users by category
        print("\nüìä –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
        
        categories = ['–∫—É—Ö–Ω—è', '–∑–∞–ª', '–º–æ–π–∫–∞']
        for category in categories:
            users = await db.get_users_by_category(category)
            print(f"  {category.title()}: {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            
        # Test getting all users
        all_users = await db.get_users_by_category()
        print(f"  –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö: {len(all_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        # Test getting archived users
        archived_users = await db.get_users_by_category(include_archived=True)
        archived_count = len([u for u in archived_users if u.get('is_archived', False)])
        print(f"  –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {archived_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    finally:
        await db.close()

if __name__ == "__main__":
    asyncio.run(test_categories()) 